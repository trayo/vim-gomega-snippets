# And(ms ...types.GomegaMatcher)
snippet and
	And(${1}, ${2})

# BeADirectory
snippet dir
	BeADirectory()
snippet bad
	BeADirectory()
snippet bedir
	BeADirectory()

# BeARegularFile
snippet rf
	BeARegularFile()
snippet regular
	BeARegularFile()
snippet brf
	BeARegularFile()
snippet bereg
	BeARegularFile()

# BeAnExistingFile
snippet ef
	BeAnExistingFile()
snippet existing
	BeAnExistingFile()
snippet bef
	BeAnExistingFile()
snippet bae
	BeAnExistingFile()
snippet beexist
	BeAnExistingFile()

# BeAssignableToTypeOf(expected interface{})
snippet ass
	BeAssignableToTypeOf()
snippet assignable
	BeAssignableToTypeOf()
snippet bat
	BeAssignableToTypeOf()
snippet bea
	BeAssignableToTypeOf()
snippet beass
	BeAssignableToTypeOf()

# BeClosed()
snippet clo
	BeClosed()
snippet closed
	BeClosed()
snippet bec
	BeClosed()

# BeEmpty()
snippet emp
	BeEmpty()
snippet empty
	BeEmpty()
snippet bee
	BeEmpty()

# BeEquivalentTo(expected interface{})
snippet equiv
	BeEquivalentTo(${1})
snippet equivalent
	BeEquivalentTo(${1})
snippet bet
	BeEquivalentTo(${1})
snippet beq
	BeEquivalentTo(${1})

# BeFalse()
snippet false
	BeFalse()
snippet bf
	BeFalse()

# BeIdenticalTo(expected interface{})
snippet ide
	BeIdenticalTo(${1})
snippet identical
	BeIdenticalTo(${1})
snippet bit
	BeIdenticalTo(${1})
snippet bid
	BeIdenticalTo(${1})

# BeNil()
snippet nil
	BeNil()
snippet bn
	BeNil()
snippet bni
	BeNil()

# BeNumerically(comparator string, compareTo ...interface{})
snippet num
	BeNumerically(${1}, ${2})
snippet numerical
	BeNumerically(${1}, ${2})
snippet bnu
	BeNumerically(${1}, ${2})
snippet bnum
	BeNumerically(${1}, ${2})

# BeSent(arg interface{})
snippet sent
	BeSent(${1})
snippet bs
	BeSent(${1})
snippet bsen
	BeSent(${1})

# BeTemporally(comparator string, compareTo time.Time, threshold ...time.Duration)
snippet tem
	BeTemporally(${1}, ${2}, ${3})
snippet temporally
	BeTemporally(${1}, ${2}, ${3})
snippet betemp
	BeTemporally(${1}, ${2}, ${3})

# BeTrue()
snippet true
	BeTrue()
snippet bt
	BeTrue()

# BeZero()
snippet zero
	BeTrue()
snippet bz
	BeTrue()
snippet bez
	BeTrue()

# ConsistOf(elements ...interface{})
snippet con
	ConsistOf(${1})
snippet con
	ConsistOf(${1})
snippet consist
	ConsistOf(${1})

# ContainElement(element interface{})

# ContainSubstring(substr string, args ...interface{})

# Equal(expected interface{})

# HaveCap(count int)

# HaveKey(key interface{})

# HaveKeyWithValue(key interface{}, value interface{})

# HaveLen(count int)

# HaveOccurred()

# HavePrefix(prefix string, args ...interface{})

# HaveSuffix(suffix string, args ...interface{})

# InterceptGomegaFailures(f func())

# MatchError(expected interface{})

# MatchJSON(json interface{})

# MatchRegexp(regexp string, args ...interface{})

# MatchYAML(yaml interface{})

# Not(matcher types.GomegaMatcher)

# Or(ms ...types.GomegaMatcher)

# Panic()

# Receive(args ...interface{})

# RegisterFailHandler(handler types.GomegaFailHandler)

# RegisterTestingT(t types.GomegaTestingT)

# SatisfyAll(matchers ...types.GomegaMatcher)

# SatisfyAny(matchers ...types.GomegaMatcher)

# SetDefaultConsistentlyDuration(t time.Duration)

# SetDefaultConsistentlyPollingInterval(t time.Duration)

# SetDefaultEventuallyPollingInterval(t time.Duration)

# SetDefaultEventuallyTimeout(t time.Duration)

# Succeed()

# WithTransform(transform interface{}, matcher types.GomegaMatcher)

# Expect(actual interface{}, extra ...interface{})

# ExpectWithOffset(offset int, actual interface{}, extra ...interface{})

# Consistently(actual interface{}, intervals ...interface{})

# ConsistentlyWithOffset(offset int, actual interface{}, intervals ...interface{})

# Eventually(actual interface{}, intervals ...interface{})

# EventuallyWithOffset(offset int, actual interface{}, intervals ...interface{})

