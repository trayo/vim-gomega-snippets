##### gomega #####

# And(ms ...types.GomegaMatcher)
snippet and And(ms ...types.GomegaMatcher)
	And(${1})
snippet And And(ms ...types.GomegaMatcher)
	And(${1})

# BeADirectory()
snippet dir BeADirectory()
	BeADirectory()
snippet directory BeADirectory()
	BeADirectory()
snippet bad BeADirectory()
	BeADirectory()
snippet bedir BeADirectory()
	BeADirectory()

# BeARegularFile()
snippet rf BeARegularFile()
	BeARegularFile()
snippet regular BeARegularFile()
	BeARegularFile()
snippet brf BeARegularFile()
	BeARegularFile()
snippet bereg BeARegularFile()
	BeARegularFile()

# BeAnExistingFile()
snippet ef BeAnExistingFile()
	BeAnExistingFile()
snippet existing BeAnExistingFile()
	BeAnExistingFile()
snippet bae BeAnExistingFile()
	BeAnExistingFile()
snippet beexist BeAnExistingFile()
	BeAnExistingFile()

# BeAssignableToTypeOf(expected interface{})
snippet ass BeAssignableToTypeOf(expected interface{})
	BeAssignableToTypeOf()
snippet assign BeAssignableToTypeOf(expected interface{})
	BeAssignableToTypeOf()
snippet assignable BeAssignableToTypeOf(expected interface{})
	BeAssignableToTypeOf()
snippet bat BeAssignableToTypeOf(expected interface{})
	BeAssignableToTypeOf()
snippet beassign BeAssignableToTypeOf(expected interface{})
	BeAssignableToTypeOf()

# BeClosed()
snippet clo BeClosed()
	BeClosed()
snippet closed BeClosed()
	BeClosed()
snippet bc BeClosed()
	BeClosed()
snippet bec BeClosed()
	BeClosed()

# BeEmpty()
snippet emp BeEmpty()
	BeEmpty()
snippet empty BeEmpty()
	BeEmpty()

# BeEquivalentTo(expected interface{})
snippet equiv BeEquivalentTo(expected interface{})
	BeEquivalentTo(${1})
snippet equivalent BeEquivalentTo(expected interface{})
	BeEquivalentTo(${1})
snippet bet BeEquivalentTo(expected interface{})
	BeEquivalentTo(${1})
snippet beq BeEquivalentTo(expected interface{})
	BeEquivalentTo(${1})

# BeFalse()
snippet bf BeFalse()
	BeFalse()
snippet false BeFalse()
	BeFalse()

# BeIdenticalTo(expected interface{})
snippet ide BeIdenticalTo(expected interface{})
	BeIdenticalTo(${1})
snippet identical BeIdenticalTo(expected interface{})
	BeIdenticalTo(${1})
snippet bit BeIdenticalTo(expected interface{})
	BeIdenticalTo(${1})

# BeNil()
snippet bn BeNil()
	BeNil()
snippet nil BeNil()
	BeNil()

# BeNumerically(comparator string, compareTo ...interface{})
snippet num BeNumerically(comparator string, compareTo ...interface{})
	BeNumerically(${1}, ${2})
snippet numerical BeNumerically(comparator string, compareTo ...interface{})
	BeNumerically(${1}, ${2})
snippet bnu BeNumerically(comparator string, compareTo ...interface{})
	BeNumerically(${1}, ${2})
snippet bnum BeNumerically(comparator string, compareTo ...interface{})
	BeNumerically(${1}, ${2})

# BeSent(arg interface{})
snippet bs BeSent(arg interface{})
	BeSent(${1})
snippet sent BeSent(arg interface{})
	BeSent(${1})

# BeTemporally(comparator string, compareTo time.Time, threshold ...time.Duration)
snippet tem BeTemporally(comparator string, compareTo time.Time, threshold ...time.Duration)
	BeTemporally(${1}, ${2}, ${3})
snippet temporally BeTemporally(comparator string, compareTo time.Time, threshold ...time.Duration)
	BeTemporally(${1}, ${2}, ${3})
snippet betemp BeTemporally(comparator string, compareTo time.Time, threshold ...time.Duration)
	BeTemporally(${1}, ${2}, ${3})

# BeTrue()
snippet bt BeTrue()
	BeTrue()
snippet true BeTrue()
	BeTrue()

# BeZero()
snippet bz BeZero()
	BeZero()
snippet zero BeZero()
	BeZero()
snippet bez BeZero()
	BeZero()

# ConsistOf(elements ...interface{})
snippet consist ConsistOf(elements ...interface{})
	ConsistOf(${1})
snippet Consist ConsistOf(elements ...interface{})
	ConsistOf(${1})

# ContainElement(element interface{})
snippet ce ContainElement(element interface{})
	ContainElement(${1})
snippet element ContainElement(element interface{})
	ContainElement(${1})

# ContainSubstring(substr string, args ...interface{})
snippet cs ContainSubstring(substr string, args ...interface{})
	ContainSubstring(${1})
snippet substring ContainSubstring(substr string, args ...interface{})
	ContainSubstring(${1})

# Equal(expected interface{})
snippet eq Equal(expected interface{})
	Equal(${1})
snippet Eq Equal(expected interface{})
	Equal(${1})
snippet equal Equal(expected interface{})
	Equal(${1})
snippet Equal Equal(expected interface{})
	Equal(${1})

# HaveCap(count int)
snippet hc HaveCap(count int)
	HaveCap(${1})
snippet cap HaveCap(count int)
	HaveCap(${1})

# HaveKey(key interface{})
snippet hk HaveKey(key interface{})
	HaveKey(${1})
snippet key HaveKey(key interface{})
	HaveKey(${1})

# HaveKeyWithValue(key interface{}, value interface{})
snippet hkw HaveKeyWithValue(key interface{}, value interface{})
	HaveKeyWithValue(${1}, ${2})
snippet keywith HaveKeyWithValue(key interface{}, value interface{})
	HaveKeyWithValue(${1}, ${2})
snippet withvalue HaveKeyWithValue(key interface{}, value interface{})
	HaveKeyWithValue(${1}, ${2})

# HaveLen(count int)
snippet hl HaveLen(count int)
	HaveLen(${1})
snippet len HaveLen(count int)
	HaveLen(${1})

# HaveOccurred()
snippet ho HaveOccurred()
	HaveOccurred()
snippet hav HaveOccurred()
	HaveOccurred()
snippet have HaveOccurred()
	HaveOccurred()

# HavePrefix(prefix string, args ...interface{})
snippet hp HavePrefix(prefix string, args ...interface{})
	HavePrefix(${1})
snippet prefix HavePrefix(prefix string, args ...interface{})
	HavePrefix(${1})

# HaveSuffix(suffix string, args ...interface{})
snippet hs HaveSuffix(suffix string, args ...interface{})
	HaveSuffix(${1})
snippet suffix HaveSuffix(suffix string, args ...interface{})
	HaveSuffix(${1})

# MatchError(expected interface{})
snippet me MatchError(expected interface{})
	MatchError(${1})
snippet error MatchError(expected interface{})
	MatchError(${1})

# MatchJSON(json interface{})
snippet mj MatchJSON(json interface{})
	MatchJSON(${1})
snippet json MatchJSON(json interface{})
	MatchJSON(${1})

# MatchRegexp(regexp string, args ...interface{})
snippet mr MatchRegexp(regexp string, args ...interface{})
	MatchRegexp(${1})
snippet regexp MatchRegexp(regexp string, args ...interface{})
	MatchRegexp(${1})

# MatchYAML(yaml interface{})
snippet my MatchYAML(yaml interface{})
	MatchYAML(${1})
snippet yaml MatchYAML(yaml interface{})
	MatchYAML(${1})

# Not(matcher types.GomegaMatcher)
snippet not Not(matcher types.GomegaMatcher)
	Not(${1})
snippet Not Not(matcher types.GomegaMatcher)
	Not(${1})

# Or(ms ...types.GomegaMatcher)
snippet or Or(ms ...types.GomegaMatcher)
	Or(${1})
snippet Or Or(ms ...types.GomegaMatcher)
	Or(${1})

# Panic()
snippet panic Panic()
	Panic(${1})
snippet Panic Panic()
	Panic(${1})

# Receive(args ...interface{})
snippet receive Receive(args ...interface{})
	Receive(${1})
snippet Receive Receive(args ...interface{})
	Receive(${1})

# SatisfyAll(matchers ...types.GomegaMatcher)
snippet all SatisfyAll(matchers ...types.GomegaMatcher)
	SatisfyAll(${1})
snippet satisfy SatisfyAll(matchers ...types.GomegaMatcher)
	SatisfyAll(${1})

# SatisfyAny(matchers ...types.GomegaMatcher)
snippet any SatisfyAny(matchers ...types.GomegaMatcher)
	SatisfyAny(${1})
snippet satisfy SatisfyAny(matchers ...types.GomegaMatcher)
	SatisfyAll(${1})

# SetDefaultConsistentlyDuration(t time.Duration)
snippet sdcd SetDefaultConsistentlyDuration(t time.Duration)
	SetDefaultConsistentlyDuration(${1})
snippet setduration SetDefaultConsistentlyDuration(t time.Duration)
	SetDefaultConsistentlyDuration(${1})

# SetDefaultConsistentlyPollingInterval(t time.Duration)
snippet sdcp SetDefaultConsistentlyPollingInterval(t time.Duration)
	SetDefaultConsistentlyPollingInterval(${1})
snippet setpolling SetDefaultConsistentlyPollingInterval(t time.Duration)
	SetDefaultConsistentlyPollingInterval(${1})

# SetDefaultEventuallyPollingInterval(t time.Duration)
snippet sdep SetDefaultEventuallyPollingInterval(t time.Duration)
	SetDefaultEventuallyPollingInterval(${1})
snippet setpolling SetDefaultEventuallyPollingInterval(t time.Duration)
	SetDefaultEventuallyPollingInterval(${1})

# SetDefaultEventuallyTimeout(t time.Duration)
snippet sdet SetDefaultEventuallyTimeout(t time.Duration)
	SetDefaultEventuallyTimeout(${1})
snippet settimeout SetDefaultEventuallyTimeout(t time.Duration)
	SetDefaultEventuallyTimeout(${1})

# Succeed()
snippet succeed Succeed()
	Succeed()
snippet Succeed Succeed()
	Succeed()

# WithTransform(transform interface{}, matcher types.GomegaMatcher)
snippet wt WithTransform(transform interface{}, matcher types.GomegaMatcher)
	WithTransform(${1})
snippet transform WithTransform(transform interface{}, matcher types.GomegaMatcher)
	WithTransform(${1})

# Should(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
snippet sh Should(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.Should(${0})
snippet sho Should(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.Should(${0})
snippet should Should(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.Should(${0})
snippet Should Should(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.Should(${0})

# ShouldNot(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
snippet sn ShouldNot(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.ShouldNot(${0})
snippet shouldnot ShouldNot(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.ShouldNot(${0})

# To(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
snippet to To(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.To(${0})
snippet To To(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.To(${0})

# ToNot(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
snippet tn ToNot(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.ToNot(${0})
snippet tonot ToNot(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.ToNot(${0})
snippet ToNot ToNot(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.ToNot(${0})

# NotTo(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
snippet nt NotTo(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.NotTo(${0})
snippet notto NotTo(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.NotTo(${0})
snippet NotTo NotTo(matcher types.GomegaMatcher, optionalDescription ...interface{}) bool
	.NotTo(${0})

# Expect(actual interface{}, extra ...interface{})
snippet ex Expect(actual interface{}, extra ...interface{})
	Expect(${1})
snippet exp Expect(actual interface{}, extra ...interface{})
	Expect(${1})
snippet expect Expect(actual interface{}, extra ...interface{})
	Expect(${1})
snippet Expect Expect(actual interface{}, extra ...interface{})
	Expect(${1})

# ExpectWithOffset(offset int, actual interface{}, extra ...interface{})
snippet ewo ExpectWithOffset(offset int, actual interface{}, extra ...interface{})
	ExpectWithOffset(${1}, ${2})
snippet offset ExpectWithOffset(offset int, actual interface{}, extra ...interface{})
	ExpectWithOffset(${1}, ${2})

# Consistently(actual interface{}, intervals ...interface{})
snippet consis Consistently(actual interface{}, intervals ...interface{})
	Consistently(${0})
snippet consistently Consistently(actual interface{}, intervals ...interface{})
	Consistently(${0})
snippet Consistently Consistently(actual interface{}, intervals ...interface{})
	Consistently(${0})

# ConsistentlyWithOffset(offset int, actual interface{}, intervals ...interface{})
snippet cwo ConsistentlyWithOffset(offset int, actual interface{}, intervals ...interface{})
	ConsistentlyWithOffset(${1}, ${2})
snippet coffset ConsistentlyWithOffset(offset int, actual interface{}, intervals ...interface{})
	ConsistentlyWithOffset(${1}, ${2})

# Eventually(actual interface{}, intervals ...interface{})
snippet ev Eventually(actual interface{}, intervals ...interface{})
	Eventually(${1})
snippet eve Eventually(actual interface{}, intervals ...interface{})
	Eventually(${1})
snippet even Eventually(actual interface{}, intervals ...interface{})
	Eventually(${1})
snippet Even Eventually(actual interface{}, intervals ...interface{})
	Eventually(${1})

# EventuallyWithOffset(offset int, actual interface{}, intervals ...interface{})
snippet ewo EventuallyWithOffset(offset int, actual interface{}, intervals ...interface{})
	EventuallyWithOffset(${1}, ${2})
snippet eoff EventuallyWithOffset(offset int, actual interface{}, intervals ...interface{})
	EventuallyWithOffset(${1}, ${2})
snippet eoffset EventuallyWithOffset(offset int, actual interface{}, intervals ...interface{})
	EventuallyWithOffset(${1}, ${2})
